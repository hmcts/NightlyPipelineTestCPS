#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Divorce Case Progression Service',
        projectUrlStr: 'https://github.com/hmcts/div-case-progression-service'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

def type = "java"
def product = "div"
def component = "case-progression"

def channel = '#div-dev'

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

List<LinkedHashMap<String, Object>> secrets = [
    secret("ccd_submission_s2s_auth_secret", "IDAM_AUTH_SECRET"),
    secret("draft_store_api_encryption_key", 'DRAFT_STORE_API_ENCRYPTION_KEY')
]

withPipeline(type , product, component) {
    loadVaultSecrets(secrets)

    before('functionalTest:aat') {
        env.ITEST_ENVIRONMENT = "aat"
    }

    after('functionalTest:aat') {
        error('Halting pipeline before prod stages')
    }

    after('checkout') {
        echo '${product}-${component} checked out'
    }

    enableSlackNotifications(channel)
}
